# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import mensaje_pb2 as mensaje__pb2


class SenderStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.send_message = channel.unary_unary(
        '/Sender/send_message',
        request_serializer=mensaje__pb2.Message_request.SerializeToString,
        response_deserializer=mensaje__pb2.Message_reply.FromString,
        )
    self.recept_message = channel.unary_unary(
        '/Sender/recept_message',
        request_serializer=mensaje__pb2.Message_request.SerializeToString,
        response_deserializer=mensaje__pb2.Message_reply.FromString,
        )


class SenderServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def send_message(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def recept_message(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SenderServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'send_message': grpc.unary_unary_rpc_method_handler(
          servicer.send_message,
          request_deserializer=mensaje__pb2.Message_request.FromString,
          response_serializer=mensaje__pb2.Message_reply.SerializeToString,
      ),
      'recept_message': grpc.unary_unary_rpc_method_handler(
          servicer.recept_message,
          request_deserializer=mensaje__pb2.Message_request.FromString,
          response_serializer=mensaje__pb2.Message_reply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Sender', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class Clients_listStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.clients_list = channel.unary_stream(
        '/Clients_list/clients_list',
        request_serializer=mensaje__pb2.Client.SerializeToString,
        response_deserializer=mensaje__pb2.Client.FromString,
        )


class Clients_listServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def clients_list(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_Clients_listServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'clients_list': grpc.unary_stream_rpc_method_handler(
          servicer.clients_list,
          request_deserializer=mensaje__pb2.Client.FromString,
          response_serializer=mensaje__pb2.Client.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Clients_list', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class Client_messagesStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.client_message = channel.unary_stream(
        '/Client_messages/client_message',
        request_serializer=mensaje__pb2.Client.SerializeToString,
        response_deserializer=mensaje__pb2.Message_reply.FromString,
        )


class Client_messagesServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def client_message(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_Client_messagesServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'client_message': grpc.unary_stream_rpc_method_handler(
          servicer.client_message,
          request_deserializer=mensaje__pb2.Client.FromString,
          response_serializer=mensaje__pb2.Message_reply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Client_messages', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
